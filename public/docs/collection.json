{
    "variable": [
        {
            "id": "baseUrl",
            "key": "baseUrl",
            "type": "string",
            "name": "string",
            "value": "http:\/\/localhost"
        }
    ],
    "info": {
        "name": "Laravel",
        "_postman_id": "b82ac63d-2c0d-47e2-afe5-544bffc7a435",
        "description": "",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json"
    },
    "item": [
        {
            "name": "Endpoints",
            "description": "",
            "item": [
                {
                    "name": "Display Swagger API page.",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/documentation",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/documentation"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [
                                {
                                    "key": "cache-control",
                                    "value": "no-cache, private"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application\/json"
                                },
                                {
                                    "key": "access-control-allow-origin",
                                    "value": "*"
                                }
                            ],
                            "code": 200,
                            "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>L5 Swagger UI<\/title>\n    <link rel=\"stylesheet\" type=\"text\/css\" href=\"http:\/\/localhost\/docs\/asset\/swagger-ui.css?v=0755b7093afdd36d03212b65315f0209\">\n    <link rel=\"icon\" type=\"image\/png\" href=\"http:\/\/localhost\/docs\/asset\/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6\" sizes=\"32x32\"\/>\n    <link rel=\"icon\" type=\"image\/png\" href=\"http:\/\/localhost\/docs\/asset\/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384\" sizes=\"16x16\"\/>\n    <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n    <\/style>\n    <\/head>\n\n<body >\n<div id=\"swagger-ui\"><\/div>\n\n<script src=\"http:\/\/localhost\/docs\/asset\/swagger-ui-bundle.js?v=6c23777357d2beae9650f9aa035d93fb\"><\/script>\n<script src=\"http:\/\/localhost\/docs\/asset\/swagger-ui-standalone-preset.js?v=6b2892eb9458da5c3224817b3984d14c\"><\/script>\n<script>\n    window.onload = function() {\n        \/\/ Build a system\n        const ui = SwaggerUIBundle({\n            dom_id: '#swagger-ui',\n            url: \"http:\/\/localhost\/docs\/api-docs.json\",\n            operationsSorter: null,\n            configUrl: null,\n            validatorUrl: null,\n            oauth2RedirectUrl: \"http:\/\/localhost\/api\/oauth2-callback\",\n\n            requestInterceptor: function(request) {\n                request.headers['X-CSRF-TOKEN'] = '';\n                return request;\n            },\n\n            presets: [\n                SwaggerUIBundle.presets.apis,\n                SwaggerUIStandalonePreset\n            ],\n\n            plugins: [\n                SwaggerUIBundle.plugins.DownloadUrl\n            ],\n\n            layout: \"StandaloneLayout\",\n            docExpansion : \"none\",\n            deepLinking: true,\n            filter: true,\n            persistAuthorization: \"false\",\n\n        })\n\n        window.ui = ui\n\n            }\n<\/script>\n<\/body>\n<\/html>\n",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Display Oauth2 callback pages.",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/oauth2-callback",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/oauth2-callback"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [
                                {
                                    "key": "content-type",
                                    "value": "text\/html; charset=UTF-8"
                                },
                                {
                                    "key": "cache-control",
                                    "value": "no-cache, private"
                                },
                                {
                                    "key": "access-control-allow-origin",
                                    "value": "*"
                                }
                            ],
                            "code": 200,
                            "body": "<!doctype html>\n<html lang=\"en-US\">\n<head>\n    <title>Swagger UI: OAuth2 Redirect<\/title>\n<\/head>\n<body>\n<script>\n    'use strict';\n    function run () {\n        var oauth2 = window.opener.swaggerUIRedirectOauth2;\n        var sentState = oauth2.state;\n        var redirectUrl = oauth2.redirectUrl;\n        var isValid, qp, arr;\n\n        if (\/code|token|error\/.test(window.location.hash)) {\n            qp = window.location.hash.substring(1).replace('?', '&');\n        } else {\n            qp = location.search.substring(1);\n        }\n\n        arr = qp.split(\"&\");\n        arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';});\n        qp = qp ? JSON.parse('{' + arr.join() + '}',\n                function (key, value) {\n                    return key === \"\" ? value : decodeURIComponent(value);\n                }\n        ) : {};\n\n        isValid = qp.state === sentState;\n\n        if ((\n          oauth2.auth.schema.get(\"flow\") === \"accessCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorization_code\"\n        ) && !oauth2.auth.code) {\n            if (!isValid) {\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"warning\",\n                    message: \"Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server.\"\n                });\n            }\n\n            if (qp.code) {\n                delete oauth2.state;\n                oauth2.auth.code = qp.code;\n                oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n            } else {\n                let oauthErrorMsg;\n                if (qp.error) {\n                    oauthErrorMsg = \"[\"+qp.error+\"]: \" +\n                        (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n                        (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n                }\n\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"error\",\n                    message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server.\"\n                });\n            }\n        } else {\n            oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n        }\n        window.close();\n    }\n\n    if (document.readyState !== 'loading') {\n        run();\n    } else {\n        document.addEventListener('DOMContentLoaded', function () {\n            run();\n        });\n    }\n<\/script>\n<\/body>\n<\/html>\n",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "GET api\/ideas",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/ideas",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/ideas"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [
                                {
                                    "key": "cache-control",
                                    "value": "no-cache, private"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application\/json"
                                },
                                {
                                    "key": "access-control-allow-origin",
                                    "value": "*"
                                },
                                {
                                    "key": "set-cookie",
                                    "value": "laravel_session=eyJpdiI6IlZiRkVJQm5ESzIxUVNhWDhad25jREE9PSIsInZhbHVlIjoiYm91KzFtL0N1MjFSZm1OSDM0MjRZNWoxam5IbWlFZ3RjT0VGd2NEM3FmMWRWekJLS3lTajRIbU0zaFhpZGs1bkxxd1RxK3VUcFE5YlBrbkFQc3RUVlFJWkFMRVJaN2V3U2c3UFg1cGN5OWxKWEtxbWhhNlhlWjZlbnBpdGNKdU0iLCJtYWMiOiJmN2I5NGI5ZjFjMjY4ZjhiZjdhOTI3ZWFhMjFlMjYzMGQ1ZDMxMDQwMTAwMGI1OTY5YWJkZGRhZjQ0YjQ3NzhjIiwidGFnIjoiIn0%3D; expires=Sun, 22 Dec 2024 17:42:20 GMT; Max-Age=7200; path=\/; httponly; samesite=lax"
                                }
                            ],
                            "code": 401,
                            "body": "{\"message\":\"Unauthenticated.\"}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "POST api\/ideas",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/ideas",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/ideas"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart\/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "content",
                                    "value": "qjrgtzwtcisxavsdkeieka",
                                    "type": "text",
                                    "description": "Must not be greater than 255 characters."
                                },
                                {
                                    "key": "image",
                                    "src": [],
                                    "type": "file"
                                }
                            ]
                        },
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": []
                },
                {
                    "name": "PUT api\/ideas\/{id}",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/ideas\/:id",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/ideas\/:id",
                            "variable": [
                                {
                                    "id": "id",
                                    "key": "id",
                                    "value": "consequatur",
                                    "description": "The ID of the idea."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart\/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "content",
                                    "value": "lmdqsblvaeulgoezbzkbixgk",
                                    "type": "text",
                                    "description": "Must not be greater than 255 characters."
                                },
                                {
                                    "key": "image",
                                    "src": [],
                                    "type": "file"
                                },
                                {
                                    "key": "_method",
                                    "value": "PUT",
                                    "type": "text"
                                }
                            ]
                        },
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": []
                },
                {
                    "name": "DELETE api\/ideas\/{id}",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/ideas\/:id",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/ideas\/:id",
                            "variable": [
                                {
                                    "id": "id",
                                    "key": "id",
                                    "value": "tempore",
                                    "description": "The ID of the idea."
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Media Management",
            "description": "\nAPIs for managing media uploads (images, videos)",
            "item": [
                {
                    "name": "Upload a file",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/media\/upload",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/media\/upload"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart\/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "file",
                                    "src": [],
                                    "type": "file"
                                }
                            ]
                        },
                        "description": "Upload an image or video file. Supported formats: jpg, jpeg, png, gif, mp4",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 201,
                            "body": "{\n \"status\": \"success\",\n \"message\": \"File uploaded successfully\",\n \"data\": {\n   \"path\": \"media\/abc123.jpg\",\n   \"url\": \"http:\/\/localhost\/storage\/media\/abc123.jpg\"\n }\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n \"status\": \"error\",\n \"message\": \"The file must be an image or video file\"\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Delete a file",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/media\/:filename",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/media\/:filename",
                            "variable": [
                                {
                                    "id": "filename",
                                    "key": "filename",
                                    "value": "abc123.jpg",
                                    "description": "The name of the file to delete."
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"status\": \"success\",\n \"message\": \"File deleted successfully\"\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n \"status\": \"error\",\n \"message\": \"File not found\"\n}",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "Notification Management",
            "description": "\nAPIs for managing notifications",
            "item": [
                {
                    "name": "Get all notifications",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/notifications",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/notifications"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Returns a paginated list of notifications for the authenticated user",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"status\": \"success\",\n \"message\": \"Notifications retrieved successfully\",\n \"data\": {\n   \"current_page\": 1,\n   \"data\": [\n     {\n       \"id\": 1,\n       \"type\": \"retweet\",\n       \"notifiable_type\": \"App\\\\Models\\\\User\",\n       \"notifiable_id\": 1,\n       \"data\": {\"message\": \"Someone retweeted your tweet\"},\n       \"read_at\": null,\n       \"created_at\": \"2024-12-22T15:00:00.000000Z\",\n       \"updated_at\": \"2024-12-22T15:00:00.000000Z\"\n     }\n   ],\n   \"first_page_url\": \"http:\/\/localhost\/api\/notifications?page=1\",\n   \"from\": 1,\n   \"last_page\": 1,\n   \"per_page\": 20\n }\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Mark a notification as read",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/notifications\/:notification_id\/read",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/notifications\/:notification_id\/read",
                            "variable": [
                                {
                                    "id": "notification_id",
                                    "key": "notification_id",
                                    "value": "18",
                                    "description": "The ID of the notification."
                                },
                                {
                                    "id": "notification",
                                    "key": "notification",
                                    "value": "1",
                                    "description": "The ID of the notification."
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"status\": \"success\",\n \"message\": \"Notification marked as read\"\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "PUT api\/notifications\/mark-all-read",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/notifications\/mark-all-read",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/notifications\/mark-all-read"
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Quote Tweet Management",
            "description": "\nAPIs for managing quote tweets",
            "item": [
                {
                    "name": "Create a quote tweet",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/ideas\/:idea_id\/quote",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/ideas\/:idea_id\/quote",
                            "variable": [
                                {
                                    "id": "idea_id",
                                    "key": "idea_id",
                                    "value": "11",
                                    "description": "The ID of the idea."
                                },
                                {
                                    "id": "idea",
                                    "key": "idea",
                                    "value": "1",
                                    "description": "The ID of the idea to quote."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"content\":\"This is a great idea!\"}"
                        },
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 201,
                            "body": "{\n \"status\": \"success\",\n \"message\": \"Quote tweet created successfully\",\n \"data\": {\n   \"id\": 1,\n   \"user_id\": 1,\n   \"idea_id\": 1,\n   \"content\": \"This is a great idea!\",\n   \"created_at\": \"2024-12-22T15:00:00.000000Z\",\n   \"updated_at\": \"2024-12-22T15:00:00.000000Z\"\n }\n}",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "Retweet Management",
            "description": "\nAPIs for managing retweets",
            "item": [
                {
                    "name": "Retweet an idea",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/ideas\/:idea_id\/retweet",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/ideas\/:idea_id\/retweet",
                            "variable": [
                                {
                                    "id": "idea_id",
                                    "key": "idea_id",
                                    "value": "17",
                                    "description": "The ID of the idea."
                                },
                                {
                                    "id": "idea",
                                    "key": "idea",
                                    "value": "1",
                                    "description": "The ID of the idea to retweet."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 201,
                            "body": "{\n \"status\": \"success\",\n \"message\": \"Retweeted successfully\",\n \"data\": {\n   \"id\": 1,\n   \"user_id\": 1,\n   \"idea_id\": 1,\n   \"created_at\": \"2024-12-22T15:00:00.000000Z\",\n   \"updated_at\": \"2024-12-22T15:00:00.000000Z\"\n }\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Remove a retweet",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/ideas\/:idea_id\/unretweet",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/ideas\/:idea_id\/unretweet",
                            "variable": [
                                {
                                    "id": "idea_id",
                                    "key": "idea_id",
                                    "value": "16",
                                    "description": "The ID of the idea."
                                },
                                {
                                    "id": "idea",
                                    "key": "idea",
                                    "value": "1",
                                    "description": "The ID of the idea to unretweet."
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"status\": \"success\",\n \"message\": \"Unretweet successful\"\n}",
                            "name": ""
                        }
                    ]
                }
            ]
        }
    ],
    "auth": {
        "type": "noauth"
    }
}