name: 'Media Management'
description: |-

  APIs for managing media uploads (images, videos)
endpoints:
  -
    httpMethods:
      - POST
    uri: api/media/upload
    metadata:
      groupName: 'Media Management'
      groupDescription: |-

        APIs for managing media uploads (images, videos)
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload a file'
      description: 'Upload an image or video file. Supported formats: jpg, jpeg, png, gif, mp4'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The file to upload. Must be an image (jpg, jpeg, png, gif) or video (mp4). Maximum size: 10MB.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses:
      -
        status: 201
        content: |-
          {
           "status": "success",
           "message": "File uploaded successfully",
           "data": {
             "path": "media/abc123.jpg",
             "url": "http://localhost/storage/media/abc123.jpg"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "status": "error",
           "message": "The file must be an image or video file"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/media/{filename}'
    metadata:
      groupName: 'Media Management'
      groupDescription: |-

        APIs for managing media uploads (images, videos)
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a file'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      filename:
        name: filename
        description: 'The name of the file to delete.'
        required: true
        example: abc123.jpg
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      filename: abc123.jpg
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "message": "File deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "File not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
